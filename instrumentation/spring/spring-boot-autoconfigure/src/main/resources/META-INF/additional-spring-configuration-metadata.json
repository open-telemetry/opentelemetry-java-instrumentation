{
  "groups": [
    {
      "name": "otel"
    }
  ],
  "properties": [
    {
      "name": "otel.attribute.count.limit",
      "type": "java.lang.Integer",
      "description": "The maximum number of attributes. Applies to spans, span events, span links, and logs.",
      "defaultValue": 128
    },
    {
      "name": "otel.attribute.value.length.limit",
      "type": "java.lang.String",
      "description": "The maximum length of attribute values. Applies to spans and logs. By default, there is no limit."
    },
    {
      "name": "otel.blrp.export.timeout",
      "type": "java.lang.String",
      "description": "The maximum allowed time, in milliseconds, to export OTLP log batch data.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": 30000
    },
    {
      "name": "otel.blrp.max.export.batch.size",
      "type": "java.lang.Integer",
      "description": "The maximum OTLP log batch size.",
      "defaultValue": 512
    },
    {
      "name": "otel.blrp.max.queue.size",
      "type": "java.lang.Integer",
      "description": "The maximum OTLP log batch queue size.",
      "defaultValue": 2048
    },
    {
      "name": "otel.blrp.schedule.delay",
      "type": "java.lang.String",
      "description": "The interval, in milliseconds, between two consecutive OTLP log batch exports.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": 1000
    },
    {
      "name": "otel.bsp.schedule.delay",
      "type": "java.lang.String",
      "description": "The interval, in milliseconds, between two consecutive OTLP span batch exports.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": 5000
    },
    {
      "name": "otel.bsp.export.timeout",
      "type": "java.lang.String",
      "description": "The maximum allowed time, in milliseconds, to export OTLP span batch data.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": 30000
    },
    {
      "name": "otel.bsp.max.export.batch.size",
      "type": "java.lang.Integer",
      "description": "The maximum OTLP span batch size.",
      "defaultValue": 512
    },
    {
      "name": "otel.bsp.max.queue.size",
      "type": "java.lang.Integer",
      "description": "The maximum OTLP span batch queue size.",
      "defaultValue": 2048
    },
    {
      "name": "otel.experimental.exporter.otlp.retry.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable experimental retry support. See https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md#otlp-exporter-retry.",
      "defaultValue": false
    },
    {
      "name": "otel.experimental.metrics.cardinality.limit",
      "type": "java.lang.Integer",
      "description": "If set, configure experimental cardinality limit. The value dictates the maximum number of distinct points per metric.",
      "defaultValue": 2000
    },
    {
      "name": "otel.experimental.metrics.view.config",
      "type": "java.util.List<java.lang.String>",
      "description": "View file configuration See https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/incubator/README.md#view-file-configuration."
    },
    {
      "name": "otel.experimental.resource.disabled.keys",
      "type": "java.util.List<java.lang.String>",
      "description": "Filter out resource entries with these keys."
    },
    {
      "name": "otel.exporter.otlp.certificate",
      "type": "java.lang.String",
      "description": "The path to the file containing trusted certificates to use when verifying an OTLP trace, metric, or log server's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default the host platform's trusted root certificates are used."
    },
    {
      "name": "otel.exporter.otlp.client.certificate",
      "type": "java.lang.String",
      "description": "The path to the file containing trusted certificates to use when verifying an OTLP trace, metric, or log client's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default, no chain file is used."
    },
    {
      "name": "otel.exporter.otlp.client.key",
      "type": "java.lang.String",
      "description": "The path to the file containing private client key to use when verifying an OTLP trace, metric, or log client's TLS credentials.<br/>The file should contain one private key PKCS8 PEM format.<br/>By default, no client key is used."
    },
    {
      "name": "otel.exporter.otlp.compression",
      "type": "java.lang.String",
      "description": "The compression type to use on OTLP trace, metric, and log requests.<br/>Options include <code>gzip</code>.<br/>By default, no compression will be used."
    },
    {
      "name": "otel.exporter.otlp.endpoint",
      "type": "java.lang.String",
      "description": "The OTLP traces, metrics, and logs endpoint to connect to.<br/>Must be a URL with a scheme of either <code>http</code> or <code>https</code> based on the use of TLS. If protocol is <code>http/protobuf</code> the version and signal will be appended to the path (e.g. <code>v1/traces</code>, <code>v1/metrics</code>, or <code>v1/logs</code>).<br/>Default is <code>http://localhost:4317</code> when protocol is <code>grpc</code>, and <code>http://localhost:4318/v1/{signal}</code> when protocol is <code>http/protobuf</code>."
    },
    {
      "name": "otel.exporter.otlp.headers",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Request headers for OTLP trace, metric, and log requests.<br/>Can be either a Spring map or a key-value separated String, e.g. <code>key1=value1,key2=value2</code>."
    },
    {
      "name": "otel.exporter.otlp.logs.certificate",
      "type": "java.lang.String",
      "description": " The path to the file containing trusted certificates to use when verifying an OTLP log server's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default, the host platform's trusted root certificates are used."
    },
    {
      "name": "otel.exporter.otlp.logs.client.certificate",
      "type": "java.lang.String",
      "description": "The path to the file containing trusted certificates to use when verifying an OTLP log server's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default, no chain file is used."
    },
    {
      "name": "otel.exporter.otlp.logs.client.key",
      "type": "java.lang.String",
      "description": "The path to the file containing private client key to use when verifying an OTLP log client's TLS credentials.<br/>The file should contain one private key PKCS8 PEM format.<br/>By default, no client key file is used."
    },
    {
      "name": "otel.exporter.otlp.logs.compression",
      "type": "java.lang.String",
      "description": "The compression type to use on OTLP log requests.<br/>Options include <code>gzip</code>.<br/>By default, no compression will be used."
    },
    {
      "name": "otel.exporter.otlp.logs.endpoint",
      "type": "java.lang.String",
      "description": "The OTLP logs endpoint to connect to.<br/>Must be a URL with a scheme of either <code>http</code> or <code>https</code> based on the use of TLS.<br/>Default is <code>http://localhost:4317</code> when protocol is <code>grpc</code>, and <code>http://localhost:4318/v1/logs</code> when protocol is <code>http/protobuf</code>."
    },
    {
      "name": "otel.exporter.otlp.logs.headers",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Request headers for OTLP log requests.<br/>Can be either a Spring map or a key-value separated String, e.g. <code>key1=value1,key2=value2</code>."
    },
    {
      "name": "otel.exporter.otlp.logs.protocol",
      "type": "java.lang.String",
      "description": "The transport protocol to use on OTLP log requests.",
      "defaultValue": "http/protobuf"
    },
    {
      "name": "otel.exporter.otlp.logs.timeout",
      "type": "java.lang.String",
      "description": "The maximum waiting time, in milliseconds, allowed to send each OTLP log batch.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": "10000"
    },
    {
      "name": "otel.exporter.otlp.metrics.certificate",
      "type": "java.lang.String",
      "description": "The path to the file containing trusted certificates to use when verifying an OTLP metric server's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default, the host platform's trusted root certificates are used."
    },
    {
      "name": "otel.exporter.otlp.metrics.client.certificate",
      "type": "java.lang.String",
      "description": "The path to the file containing trusted certificates to use when verifying an OTLP metric server's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default, no chain file is used."
    },
    {
      "name": "otel.exporter.otlp.metrics.client.key",
      "type": "java.lang.String",
      "description": "The path to the file containing private client key to use when verifying an OTLP metric client's TLS credentials.<br/>The file should contain one private key PKCS8 PEM format.<br/>By default, no client key file is used."
    },
    {
      "name": "otel.exporter.otlp.metrics.compression",
      "type": "java.lang.String",
      "description": "The compression type to use on OTLP metric requests.<br/>Options include <code>gzip</code>.<br/>By default, no compression will be used."
    },
    {
      "name": "otel.exporter.otlp.metrics.default.histogram.aggregation",
      "type": "java.lang.String",
      "description": "The preferred default histogram aggregation.",
      "defaultValue": "EXPLICIT_BUCKET_HISTOGRAM"
    },
    {
      "name": "otel.exporter.otlp.metrics.endpoint",
      "type": "java.lang.String",
      "description": "The OTLP metrics endpoint to connect to.<br/>Must be a URL with a scheme of either <code>http</code> or <code>https</code> based on the use of TLS.<br/>Default is <code>http://localhost:4317</code> when protocol is <code>grpc</code>, and <code>http://localhost:4318/v1/metrics</code> when protocol is <code>http/protobuf</code>."
    },
    {
      "name": "otel.exporter.otlp.metrics.headers",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Request headers for OTLP metric requests.<br/>Can be either a Spring map or a key-value separated String, e.g. <code>key1=value1,key2=value2</code>."
    },
    {
      "name": "otel.exporter.otlp.metrics.protocol",
      "type": "java.lang.String",
      "description": "The transport protocol to use on OTLP metric requests.",
      "defaultValue": "http/protobuf"
    },
    {
      "name": "otel.exporter.otlp.metrics.temporality.preference",
      "type": "java.lang.String",
      "description": "The preferred output aggregation temporality.",
      "defaultValue": "CUMULATIVE"
    },
    {
      "name": "otel.exporter.otlp.metrics.timeout",
      "type": "java.lang.String",
      "description": "The maximum waiting time, in milliseconds, allowed to send each OTLP metric batch.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": "10000"
    },
    {
      "name": "otel.exporter.otlp.protocol",
      "type": "java.lang.String",
      "description": "The transport protocol to use on OTLP trace, metric, and log requests.",
      "defaultValue": "http/protobuf"
    },
    {
      "name": "otel.exporter.otlp.timeout",
      "type": "java.lang.String",
      "description": "The maximum waiting time, in milliseconds, allowed to send each OTLP trace, metric, and log batch.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": "10000"
    },
    {
      "name": "otel.exporter.otlp.traces.certificate",
      "type": "java.lang.String",
      "description": "The path to the file containing trusted certificates to use when verifying an OTLP trace server's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default, the host platform's trusted root certificates are used."
    },
    {
      "name": "otel.exporter.otlp.traces.client.certificate",
      "type": "java.lang.String",
      "description": "The path to the file containing trusted certificates to use when verifying an OTLP trace server's TLS credentials.<br/>The file should contain one or more X.509 certificates in PEM format.<br/>By default no chain file is used."
    },
    {
      "name": "otel.exporter.otlp.traces.client.key",
      "type": "java.lang.String",
      "description": "The path to the file containing private client key to use when verifying an OTLP trace client's TLS credentials.<br/>The file should contain one private key PKCS8 PEM format.<br/>By default, no client key file is used."
    },
    {
      "name": "otel.exporter.otlp.traces.compression",
      "type": "java.lang.String",
      "description": "The compression type to use on OTLP trace requests.<br/>Options include <code>gzip</code>.<br/>By default, no compression will be used."
    },
    {
      "name": "otel.exporter.otlp.traces.endpoint",
      "type": "java.lang.String",
      "description": "The OTLP traces endpoint to connect to.<br/>Must be a URL with a scheme of either <code>http</code> or <code>https</code> based on the use of TLS.<br/>Default is <code>http://localhost:4317</code> when protocol is <code>grpc</code>, and <code>http://localhost:4318/v1/traces</code> when protocol is <code>http/protobuf</code>."
    },
    {
      "name": "otel.exporter.otlp.traces.headers",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Request headers for OTLP trace requests.<br/>Can be either a Spring map or a key-value separated String, e.g. <code>key1=value1,key2=value2</code>."
    },
    {
      "name": "otel.exporter.otlp.traces.protocol",
      "type": "java.lang.String",
      "description": "The transport protocol to use on OTLP trace requests.",
      "defaultValue": "http/protobuf"
    },
    {
      "name": "otel.exporter.otlp.traces.timeout",
      "type": "java.lang.String",
      "description": "The maximum waiting time, in milliseconds, allowed to send each OTLP trace batch.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": "10000"
    },
    {
      "name": "otel.exporter.zipkin.endpoint",
      "type": "java.lang.String",
      "description": "The Zipkin endpoint to connect to.<br/>Currently only HTTP is supported.",
      "defaultValue": "http://localhost:9411/api/v2/spans"
    },
    {
      "name": "otel.instrumentation.annotations.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the <code>@WithSpan</code> annotation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the DB statement sanitization.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.common.default-enabled",
      "type": "java.lang.Boolean",
      "description": "Enables all instrumentations. Set to <code>false</code> to disable all instrumentations and then enable specific modules individually, e.g. <code>otel.instrumentation.jdbc.enabled=true</code>.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.common.peer-service-mapping",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Used to specify a mapping from host names or IP addresses to peer services, as a comma-separated list of <code>host_or_ip=user_assigned_name</code> pairs. The peer service is added as an attribute to a span whose host or IP address match the mapping. See https://opentelemetry.io/docs/zero-code/java/agent/configuration/#peer-service-name."
    },
    {
      "name": "otel.instrumentation.http.client.capture-request-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "List of HTTP request headers to capture in HTTP clients."
    },
    {
      "name": "otel.instrumentation.http.client.capture-response-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "List of HTTP response headers to capture in HTTP clients."
    },
    {
      "name": "otel.instrumentation.http.client.emit-experimental-telemetry",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of experimental HTTP client telemetry. Add the <code>http.request.body.size</code> and <code>http.response.body.size> attributes to spans, and record the <code>http.client.request.size</code> and <code>http.client.response.size</code> metrics.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.http.client.experimental.redact-query-parameters",
      "type": "java.lang.Boolean",
      "description": "Redact sensitive URL parameters. See https://opentelemetry.io/docs/specs/semconv/http/http-spans.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.http.known-methods",
      "type": "java.util.List<java.lang.String>",
      "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as <code>_OTHER</code>.",
      "defaultValue": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE"
    },
    {
      "name": "otel.instrumentation.http.server.capture-request-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "List of HTTP request headers to capture in HTTP servers."
    },
    {
      "name": "otel.instrumentation.http.server.capture-response-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "List of HTTP response headers to capture in HTTP servers."
    },
    {
      "name": "otel.instrumentation.http.server.emit-experimental-telemetry",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of experimental HTTP server telemetry. Add the <code>http.request.body.size</code> and <code>http.response.body.size</code> attributes to spans, and record the <code>http.server.request.body.size</code> and <code>http.server.response.body.size</code> metrics.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.jdbc.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the JDBC instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.jdbc.statement-sanitizer.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the DB statement sanitization.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.kafka.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Kafka instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.kafka.experimental-span-attributes",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of experimental Kafka span attributes.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.kafka.autoconfigure-interceptor",
      "type": "java.lang.Boolean",
      "description": "Enable automatic configuration of tracing interceptors on <code>ConcurrentKafkaListenerContainerFactory</code> using a <code>BeanPostProcessor</code>. You may disable this if you wish to manually configure these interceptors.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.mongo.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Mongo client instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.mongo.statement-sanitizer.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the DB statement sanitization.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.log4j-appender.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Log4J2 appender instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.logback-appender.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Logback appender instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.logback-appender.experimental.capture-code-attributes",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of source code attributes. Note that capturing source code attributes at logging sites might add a performance overhead.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.logback-appender.experimental.capture-marker-attribute",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of Logback markers as attributes.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.logback-appender.experimental.capture-key-value-pair-attributes",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of Logback key value pairs as attributes.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.logback-appender.experimental-log-attributes",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of experimental log attributes thread.name and thread.id.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.logback-appender.experimental.capture-logger-context-attributes",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of Logback logger context properties as attributes.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.logback-appender.experimental.capture-logstash-attributes",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of Logstash attributes, supported are those added to logs via `Markers.append()`, `Markers.appendEntries()`, `Markers.appendArray()` and `Markers.appendRaw()` methods.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.logback-appender.experimental.capture-mdc-attributes",
      "type": "java.lang.String",
      "description": "MDC attributes to capture. Use the wildcard character <code>*</code> to capture all attributes. This is a comma-separated list of attribute names."
    },
    {
      "name": "otel.instrumentation.logback-mdc.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Logback MDC instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.logback-mdc.add-baggage",
      "type": "java.lang.Boolean",
      "description": "Enable exposing baggage attributes through MDC.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.common.logging.trace-id",
      "type": "java.lang.String",
      "description": "Customize MDC key name for the trace id.",
      "defaultValue": "trace_id"
    },
    {
      "name": "otel.instrumentation.common.logging.span-id",
      "type": "java.lang.String",
      "description": "Customize MDC key name for the span id.",
      "defaultValue": "span_id"
    },
    {
      "name": "otel.instrumentation.common.logging.trace-flags",
      "type": "java.lang.String",
      "description": "Customize MDC key name for the trace flags.",
      "defaultValue": "trace_flags"
    },
    {
      "name": "otel.instrumentation.micrometer.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Micrometer instrumentation.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.r2dbc.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the R2DBC (reactive JDBC) instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.r2dbc.statement-sanitizer.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the DB statement sanitization.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.runtime-telemetry.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable runtime telemetry metrics.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.runtime-telemetry.emit-experimental-telemetry",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of experimental metrics.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.runtime-telemetry-java17.enable-all",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of all JFR based metrics.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.runtime-telemetry-java17.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the capture of JFR based metrics.",
      "defaultValue": false
    },
    {
      "name": "otel.instrumentation.spring-web.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the RestTemplate instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.spring-webflux.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the WebClient instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.spring-webmvc.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Servlet instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.instrumentation.spring-scheduling.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable the Spring Scheduling instrumentation.",
      "defaultValue": true
    },
    {
      "name": "otel.java.enabled.resource.providers",
      "type": "java.util.List<java.lang.String>",
      "description": "Enables one or more <code>ResourceProvider</code> types. If unset, all resource providers are enabled. Each entry is the fully qualified classname of a <code>ResourceProvider</code>."
    },
    {
      "name": "otel.java.disabled.resource.providers",
      "type": "java.util.List<java.lang.String>",
      "description": " Disables one or more <code>ResourceProvider</code> types. Each entry is the fully qualified classname of a <code>ResourceProvider</code>."
    },
    {
      "name": "otel.logs.exporter",
      "type": "java.util.List<java.lang.String>",
      "description": "List of exporters to be used for logs.",
      "defaultValue": "otlp"
    },
    {
      "name": "otel.metric.export.interval",
      "type": "java.lang.String",
      "description": "The interval, in milliseconds, between the start of two export attempts.<br/>Durations can be of the form <code>{number}{unit}</code>, where unit is one of:<ul><li>ms<li>s<li>m<li>h<li>d</ul><p>If no unit is specified, milliseconds is the assumed duration unit.",
      "defaultValue": "60000"
    },
    {
      "name": "otel.metrics.exemplar.filter",
      "type": "java.lang.String",
      "description": "The filter for exemplar sampling.",
      "defaultValue": "TRACE_BASED"
    },
    {
      "name": "otel.metrics.exporter",
      "type": "java.util.List<java.lang.String>",
      "description": "List of exporters to be used for metrics.",
      "defaultValue": "otlp"
    },
    {
      "name": "otel.propagators",
      "type": "java.util.List<java.lang.String>",
      "description": "List of propagators to be used for context propagation.",
      "defaultValue": "tracecontext,baggage"
    },
    {
      "name": "otel.resource.attributes",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Resource attributes to be added to all spans. In addition to these attributes, the resource will also include attributes discovered from the runtime, such as <code>host.name</code> and <code>process.id</code>."
    },
    {
      "name": "otel.sdk.disabled",
      "type": "java.lang.Boolean",
      "description": "Disable the OpenTelemetry Spring Starter.",
      "defaultValue": false
    },
    {
      "name": "otel.service.name",
      "type": "java.lang.String",
      "description": "Specify logical service name. Takes precedence over <code>service.name</code> defined with <code>otel.resource.attributes</code>."
    },
    {
      "name": "otel.span.attribute.value.length.limit",
      "type": "java.lang.Integer",
      "description": "The maximum length of span attribute values. Takes precedence over <code>otel.attribute.value.length.limit</code>. By default, there is no limit."
    },
    {
      "name": "otel.span.attribute.count.limit",
      "type": "java.lang.Integer",
      "description": "The maximum number of attributes per span. Takes precedence over <code>otel.attribute.count.limit<code>.",
      "defaultValue": 128
    },
    {
      "name": "otel.span.event.count.limit",
      "type": "java.lang.Integer",
      "description": "The maximum number of events per span.",
      "defaultValue": 128
    },
    {
      "name": "otel.span.link.count.limit",
      "type": "java.lang.Integer",
      "description": "The maximum number of links per span.",
      "defaultValue": 128
    },
    {
      "name": "otel.traces.exporter",
      "type": "java.util.List<java.lang.String>",
      "description": "List of exporters to be used for tracing.",
      "defaultValue": "otlp"
    },
    {
      "name": "otel.traces.sampler",
      "type": "java.lang.String",
      "description": "The sampler to use for tracing.",
      "defaultValue": "parentbased_always_on"
    },
    {
      "name": "otel.traces.sampler.arg",
      "type": "java.lang.Double",
      "description": "An argument to the configured tracer if supported, for example a ratio.",
      "defaultValue": 1.0
    }
  ],
  "hints": [
    {
      "name": "otel.exporter.otlp.logs.protocol",
      "values": [
        {
          "value": "http/protobuf"
        },
        {
          "value": "grpc"
        }
      ]
    },
    {
      "name": "otel.exporter.otlp.metrics.protocol",
      "values": [
        {
          "value": "http/protobuf"
        },
        {
          "value": "grpc"
        }
      ]
    },
    {
      "name": "otel.exporter.otlp.protocol",
      "values": [
        {
          "value": "http/protobuf"
        },
        {
          "value": "grpc"
        }
      ]
    },
    {
      "name": "otel.exporter.otlp.traces.protocol",
      "values": [
        {
          "value": "http/protobuf"
        },
        {
          "value": "grpc"
        }
      ]
    },
    {
      "name": "otel.exporter.otlp.metrics.default.histogram.aggregation",
      "values": [
        {
          "value": "BASE2_EXPONENTIAL_BUCKET_HISTOGRAM"
        },
        {
          "value": "EXPLICIT_BUCKET_HISTOGRAM"
        }
      ]
    },
    {
      "name": "otel.exporter.otlp.metrics.temporality.preference",
      "values": [
        {
          "value": "CUMULATIVE",
          "description": "All instruments will have cumulative temporality."
        },
        {
          "value": "DELTA",
          "description": "Counter (sync and async) and histograms will be delta, up down counters (sync and async) will be cumulative."
        },
        {
          "value": "LOWMEMORY",
          "description": "Sync counter and histograms will be delta, async counter and up down counters (sync and async) will be cumulative."
        }
      ]
    },
    {
      "name": "otel.logs.exporter",
      "values": [
        {
          "value": "console",
          "description": "The console exporter prints exported logs to stdout. It's mainly used for testing and debugging."
        },
        {
          "value": "none",
          "description": "No autoconfigured exporter."
        },
        {
          "value": "otlp",
          "description": "OpenTelemetry Protocol (OTLP) exporter."
        }
      ]
    },
    {
      "name": "otel.metrics.exemplar.filter",
      "values": [
        {
          "value": "ALWAYS_ON",
          "description": "Take all exemplars."
        },
        {
          "value": "ALWAYS_OFF",
          "description": "Drop all exemplars."
        },
        {
          "value": "TRACE_BASED",
          "description": "Choose exemplars that correspond to a sampled span."
        }
      ]
    },
    {
      "name": "otel.metrics.exporter",
      "values": [
        {
          "value": "console",
          "description": "The console exporter prints exported metrics to stdout. It's mainly used for testing and debugging."
        },
        {
          "value": "none",
          "description": "No autoconfigured exporter."
        },
        {
          "value": "otlp",
          "description": "OpenTelemetry Protocol (OTLP) exporter."
        }
      ]
    },
    {
      "name": "otel.propagators",
      "values": [
        {
          "value": "baggage",
          "description": "The Baggage propagator propagates baggage using the W3C Baggage format. See https://www.w3.org/TR/baggage/."
        },
        {
          "value": "b3",
          "description": "The B3 propagator propagates trace context using the B3 single-header format: See https://github.com/openzipkin/b3-propagation#single-header."
        },
        {
          "value": "b3multi",
          "description": "The B3 propagator propagates trace context using the B3 multi-header format: See https://github.com/openzipkin/b3-propagation#multiple-headers."
        },
        {
          "value": "jaeger",
          "description": "The Jaeger propagator propagates trace context using the Jaeger format. See https://www.jaegertracing.io/docs/1.21/client-libraries/#propagation-format."
        },
        {
          "value": "ottrace",
          "description": "The OpenTelemetry Trace Context propagator propagates trace context using the OpenTelemetry format. See https://github.com/opentracing/specification/blob/master/rfc/trace_identifiers.md."
        },
        {
          "value": "tracecontext",
          "description": "The Trace Context propagator propagates trace context using the W3C Trace Context format (add `baggage` as well to include W3C baggage). See https://www.w3.org/TR/trace-context/."
        },
        {
          "value": "xray",
          "description": "The AWS X-Ray propagator propagates trace context using the AWS X-Ray format. See https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader."
        }
      ]
    },
    {
      "name": "otel.traces.exporter",
      "values": [
        {
          "value": "console",
          "description": "The console exporter prints the name of the span along with its attributes to stdout. It's mainly used for testing and debugging."
        },
        {
          "value": "none",
          "description": "No autoconfigured exporter."
        },
        {
          "value": "otlp",
          "description": "OpenTelemetry Protocol (OTLP) exporter."
        },
        {
          "value": "zipkin",
          "description": "Zipkin exporter."
        }
      ]
    },
    {
      "name": "otel.traces.sampler",
      "values": [
        {
          "value": "always_on",
          "description": "Keep all spans."
        },
        {
          "value": "always_off",
          "description": "Drop all spans."
        },
        {
          "value": "traceidratio",
          "description": "Keep a ratio of <code>otel.traces.sampler.arg<code> of all spans."
        },
        {
          "value": "parentbased_always_on",
          "description": "Keep all spans where the parent is also kept. If there is no parent, keep all spans."
        },
        {
          "value": "parentbased_always_off",
          "description": "Keep all spans where the parent is also kept. If there is no parent, drop all spans."
        },
        {
          "value": "parentbased_traceidratio",
          "description": "Keep all spans where the parent is also kept. If there is no parent, keep a ratio of <code>otel.traces.sampler.arg<code> of all spans."
        }
      ]
    }
  ]
}
