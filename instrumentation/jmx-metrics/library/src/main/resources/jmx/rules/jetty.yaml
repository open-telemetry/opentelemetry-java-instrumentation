---
rules:

  # Thread metrics for Jetty 12 and later
  - bean: org.eclipse.jetty.util.thread:context=*,type=queuedthreadpool,id=*
    prefix: jetty.thread.
    unit: "{thread}"
    type: updowncounter
    metricAttribute:
      # 'id' is a "technical ID" with a single '0' value by default
      jetty.thread.pool.id: param(id)
      # 'context' is a high cardinality value like 'Server@5a411614' but likely stable for the
      # duration of the jetty process lifecycle
      jetty.thread.context: param(context)
    mapping:
      # jetty.thread.count
      threads:
        metric: count
        desc: The current number of threads
      # jetty.thread.limit
      maxThreads:
        metric: limit
        desc: The configured maximum number of threads in the pool
      # jetty.thread.idle.count
      idleThreads:
        metric: idle.count
        desc: The current number of idle threads
      # jetty.thread.busy.count
      busyThreads:
        metric: busy.count
        desc: The current number of busy threads
      # jetty.thread.queue.size
      queueSize:
        metric: queue.size
        desc: The current job queue size

  # Thread metrics for Jetty 9 to 11
  - bean: org.eclipse.jetty.util.thread:type=queuedthreadpool,id=*
    prefix: jetty.thread.
    unit: "{thread}"
    type: updowncounter
    metricAttribute:
      # 'id' is a "technical ID" with a single '0' value by default
      jetty.thread.pool.id: param(id)
    mapping:
      # jetty.thread.count
      threads:
        metric: count
        desc: The current number of threads
      # jetty.thread.limit
      maxThreads:
        metric: limit
        desc: The configured maximum number of threads in the pool
      # jetty.thread.idle.count
      idleThreads:
        metric: idle.count
        desc: The current number of idle threads
      # jetty.thread.busy.count
      busyThreads:
        metric: busy.count
        desc: The current number of busy threads
      # jetty.thread.queue.size
      queueSize:
        metric: queue.size
        desc: The current job queue size

  - bean: org.eclipse.jetty.io:context=*,type=managedselector,id=*
    metricAttribute:
      # 'id' is a numerical value in [0,9] by default
      jetty.selector.context: param(context)
      # 'context' is a high cardinality value like 'HTTP_1_1@7674f035' but likely stable for the
      # duration of the jetty process lifecycle
      jetty.selector.id: param(id)
    mapping:
      # jetty.select.count
      selectCount:
        metric: jetty.select.count
        type: counter
        unit: "{operation}"
        desc: The number of select calls

  # Session metrics for Jetty 12
  - bean: org.eclipse.jetty.session:context=*,type=defaultsessioncache,id=*
    # org.eclipse.jetty.session:context=ROOT,type=defaultsessioncache,id=0
    prefix: jetty.session.
    unit: "{session}"
    metricAttribute:
      # 'context' corresponds to the webapp context path
      jetty.context: param(context)
      # 'id' is a "technical ID" with a single '0' value by default
      jetty.session.cache.id: param(id)
    mapping:
      # jetty.session.count
      sessionsCurrent:
        metric: count
        type: updowncounter
        desc: Current number of active sessions
      # jetty.session.count.max
      sessionsMax:
        metric: count.max
        # gauge because it can't be aggregated
        type: gauge
        desc: Maximum number of active sessions

  # Session metrics for Jetty 9 to 11
  - bean: org.eclipse.jetty.server.session:context=*,type=sessionhandler,id=*
    prefix: jetty.session.
    metricAttribute:
      # 'context' corresponds to the webapp context path
      jetty.context: param(context)
      # 'id' is a "technical ID" with a single '0' value by default
      jetty.session.handler.id: param(id)
    mapping:
      # jetty.session.created.count
      sessionsCreated:
        metric: created.count
        unit: "{session}"
        type: counter
        desc: The total number of created sessions
      # jetty.session.duration.sum
      sessionTimeTotal:
        metric: duration.sum
        unit: s
        type: counter
        desc: The cumulated session duration
      # jetty.session.duration.max
      sessionTimeMax:
        metric: duration.max
        unit: s
        # gauge because it can't be aggregated
        type: gauge
        desc: The maximum session duration
      # jetty.session.duration.mean
      sessionTimeMean:
        metric: duration.mean
        unit: s
        # gauge because it can't be aggregated
        type: gauge
        desc: The mean session duration
