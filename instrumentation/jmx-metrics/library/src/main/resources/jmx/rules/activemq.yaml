---
rules:

    # Topic and Queues level metrics
  - beans:
      - org.apache.activemq:type=Broker,brokerName=*,destinationType=Queue,destinationName=*
      - org.apache.activemq:type=Broker,brokerName=*,destinationType=Topic,destinationName=*
    metricAttribute:
      messaging.destination.name: param(destinationName)
      messaging.system: const(activemq)
      # 'topic' or 'queue'
      activemq.destination.type: lowercase(param(destinationType))
      activemq.broker.name: param(brokerName)
    prefix: activemq.
    mapping:
      # activemq.producer.count
      ProducerCount:
        metric: producer.count
        unit: "{producer}"
        type: updowncounter
        desc: The number of producers attached to this destination
      # activemq.consumer.count
      ConsumerCount:
        metric: consumer.count
        unit: "{consumer}"
        type: updowncounter
        desc: The number of consumers subscribed to this destination
      # activemq.memory.usage
      MemoryUsageByteCount:
        metric: memory.usage
        unit: By
        type: updowncounter
        desc: The amount of used memory
      # activemq.memory.limit
      MemoryLimit:
        metric: memory.limit
        unit: By
        type: updowncounter
        desc: The amount of configured memory limit
      # activemq.temp.utilization
      TempUsagePercentUsage:
        metric: temp.utilization
        unit: "1"
        type: gauge
        desc: The percentage of non-persistent storage used
      # activemq.temp.limit
      TempUsageLimit:
        metric: temp.limit
        unit: By
        type: updowncounter
        desc: The amount of configured non-persistent storage limit
      # activemq.message.queue.size
      QueueSize:
        metric: message.queue.size
        unit: "{message}"
        type: updowncounter
        desc: The current number of messages waiting to be consumed
      # activemq.message.expired
      ExpiredCount:
        metric: message.expired
        unit: "{message}"
        type: counter
        desc: The number of messages not delivered because they expired
      # activemq.message.enqueued
      EnqueueCount:
        metric: message.enqueued
        unit: "{message}"
        type: counter
        desc: The number of messages sent to this destination
      # activemq.message.dequeued
      DequeueCount:
        metric: message.dequeued
        unit: "{message}"
        type: counter
        desc: The number of messages acknowledged and removed from this destination


  # Broker-level metrics
  - bean: org.apache.activemq:type=Broker,brokerName=*
    metricAttribute:
      messaging.system: const(activemq)
      activemq.broker.name: param(brokerName)
    prefix: activemq.
    mapping:
      # activemq.connection.count
      CurrentConnectionsCount:
        metric: connection.count
        type: updowncounter
        unit: "{connection}"
        desc: The number of active connections
      # activemq.broker.memory.limit
      MemoryPercentLimit:
        metric: broker.temp.limit
        type: updowncounter
        unit: By
        desc: The amount of configured broker non-persistent storage limit
      # activemq.broker.store.limit
      StorePercentLimit:
        metric: broker.store.limit
        type: updowncounter
        unit: By
        desc: The amount of configured broker persistent storage limit
      # activemq.broker.temp.limit
      TempPercentLimit:
        metric: broker.temp.limit
        type: updowncounter
        unit: By
        desc: The amount of configured broker non-persistent storage limit
