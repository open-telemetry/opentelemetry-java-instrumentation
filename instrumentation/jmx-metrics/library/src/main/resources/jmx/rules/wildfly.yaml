---
rules:

  - bean: jboss.as:deployment=*,subsystem=undertow
    prefix: wildfly.session.
    metricAttribute:
      wildfly.deployment: param(deployment)
    unit: "{session}"
    mapping:
      # wildfly.session.created
      sessionsCreated:
        metric: created
        type: counter
        desc: The number of sessions created
      # wildfly.session.count
      activeSessions:
        metric: count
        type: updowncounter
        desc: The number of active sessions
      # wildfly.session.expired
      expiredSessions:
        metric: expired
        type: counter
        desc: The number of expired sessions
      # wildfly.session.rejected
      rejectedSessions:
        metric: rejected
        type: counter
        desc: The number of rejected sessions

  - bean: jboss.as:subsystem=undertow,server=*,http-listener=*
    prefix: wildfly.
    metricAttribute:
      wildfly.server: param(server)
      wildfly.listener: param(http-listener)
    type: counter
    mapping:
      # wildfly.request.count
      requestCount:
        metric: request.count
        unit: "{request}"
        desc: The number of requests received
      # wildfly.request.duration.sum
      processingTime:
        metric: request.duration.sum
        sourceUnit: ns
        unit: s
        desc: The total amount of time spent processing requests.
      # wildfly.error.count
      errorCount:
        metric: error.count
        unit: "{request}"
        desc: The number of requests that have resulted in a 5xx response.

  # wildly.network.io
  - bean: jboss.as:subsystem=undertow,server=*,http-listener=*
    metricAttribute:
      wildfly.server: param(server)
      wildfly.listener: param(http-listener)
    type: counter
    unit: By
    mapping:
      bytesSent:
        metric: &metric wildfly.network.io
        desc: &desc Total number of bytes transferred
        metricAttribute:
          network.io.direction: const(transmit)
      bytesReceived:
        metric: *metric
        desc: *desc
        metricAttribute:
          network.io.direction: const(receive)

#  - bean: jboss.as:subsystem=datasources,data-source=*,statistics=pool
#    unit: "1"
#    metricAttribute:
#      data_source: param(data-source)
#    mapping:
#      ActiveCount:
#        metric: wildfly.db.client.connections.usage
#        metricAttribute:
#          state: const(used)
#        desc: The number of open jdbc connections
#      IdleCount:
#        metric: wildfly.db.client.connections.usage
#        metricAttribute:
#          state: const(idle)
#        desc: The number of open jdbc connections
#      WaitCount:
#        metric: wildfly.db.client.connections.WaitCount
#        type: counter

#  - bean: jboss.as:subsystem=transactions
#    type: counter
#    prefix: wildfly.db.client.
#    unit: "{transactions}"
#    mapping:
#      numberOfTransactions:
#        metric: transaction.NumberOfTransactions
#      numberOfApplicationRollbacks:
#        metric: rollback.count
#        metricAttribute:
#          cause: const(application)
#        desc: The total number of transactions rolled back
#      numberOfResourceRollbacks:
#        metric: rollback.count
#        metricAttribute:
#          cause: const(resource)
#        desc: The total number of transactions rolled back
#      numberOfSystemRollbacks:
#        metric: rollback.count
#        metricAttribute:
#          cause: const(system)
#        desc: The total number of transactions rolled back
